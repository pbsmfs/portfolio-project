version: '3.8'

services:
  db:
    image: "postgres:14-alpine"
    ports: 
      - "${POSTGRES_PORT_EXTERNAL}:${POSTGRES_PORT_INTERNAL}"
    environment: 
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5  
  client:
    depends_on: 
      db:
        condition: service_healthy
    build: .
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - REACT_APP_WS_URL=${REACT_APP_WS_URL}
      - REACT_APP_CLIENT_URL=${REACT_APP_CLIENT_URL}
      - REACT_APP_EMAILJS_SERVICE_ID=${REACT_APP_EMAILJS_SERVICE_ID}
      - REACT_APP_EMAILJS_TEMPLATE_ID=${REACT_APP_EMAILJS_TEMPLATE_ID}
      - REACT_APP_EMAILJS_USER_ID=${REACT_APP_EMAILJS_USER_ID}
  server:
    depends_on: 
      db:
        condition: service_healthy
    build: ./src/server
    ports: 
      - "4000:4000"
    restart: unless-stopped
    environment: 
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT_INTERNAL=${POSTGRES_PORT_INTERNAL}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - REACT_APP_WS_URL=${REACT_APP_WS_URL}
      - REACT_APP_CLIENT_URL=${REACT_APP_CLIENT_URL}
volumes:
  postgres_data:
  